# D√©finition des chemins
DUMP_DIR := $(shell realpath $(dir $(lastword $(MAKEFILE_LIST)))/Dump)
DUMP_FILE_PATH := /tmp/dump_file.txt
CONTAINER_NAME_PATH := /tmp/container_name.txt
DB_TYPE_PATH := /tmp/db_type.txt
MYSQL_DB_PATH := /tmp/mysql_db.txt

# Nettoyage des fichiers temporaires
clean-temp:
	@rm -f $(DUMP_FILE_PATH) $(CONTAINER_NAME_PATH) $(DB_TYPE_PATH) $(MYSQL_DB_PATH)

# √âtape 1: S√©lection du fichier dump
select-dump: clean-temp
	@if [ ! -d "$(DUMP_DIR)" ]; then \
		echo "‚ùå Erreur : Le dossier Dump n'existe pas dans tools/"; \
		exit 1; \
	fi
	@echo "üìÇ Liste des fichiers de dump disponibles dans $(DUMP_DIR):"
	@ls -1 "$(DUMP_DIR)" | nl
	@read -p "S√©lectionnez un fichier dump (num√©ro) : " choice; \
	 FILE_NAME=$$(ls -1 "$(DUMP_DIR)" | sed -n "$$choice p"); \
	 if [ -z "$$FILE_NAME" ]; then \
	    echo "‚ùå Erreur : S√©lection invalide."; exit 1; \
	 fi; \
	 echo "$(DUMP_DIR)/$$FILE_NAME" > $(DUMP_FILE_PATH); \
	 echo "‚úÖ Dump s√©lectionn√© : $$FILE_NAME"

# √âtape 2: S√©lection du container actif
select-container:
	@echo "üì¶ Liste des containers Docker actifs :"
	@docker ps --format "{{.Names}}" | nl
	@read -p "S√©lectionnez un container (num√©ro) : " choice; \
	 CONTAINER_NAME=$$(docker ps --format "{{.Names}}" | sed -n "$$choice p"); \
	 if [ -z "$$CONTAINER_NAME" ]; then \
	    echo "‚ùå Erreur : S√©lection invalide."; exit 1; \
	 fi; \
	 echo "$$CONTAINER_NAME" > $(CONTAINER_NAME_PATH); \
	 echo "‚úÖ Container s√©lectionn√© : $$CONTAINER_NAME"

# √âtape 3: S√©lection du type de base de donn√©es
select-db:
	@echo "üõ¢Ô∏è  S√©lectionnez le type de base de donn√©es :"
	@echo "1) MySQL"
	@echo "2) PostgreSQL"
	@echo "3) Oracle"
	@read -p "Choisissez un type de BDD (1/2/3) : " db_choice; \
	case $$db_choice in \
		1) echo "mysql" > $(DB_TYPE_PATH); echo "‚úÖ Base de donn√©es s√©lectionn√©e : MySQL";; \
		2) echo "postgres" > $(DB_TYPE_PATH); echo "‚úÖ Base de donn√©es s√©lectionn√©e : PostgreSQL";; \
		3) echo "oracle" > $(DB_TYPE_PATH); echo "‚úÖ Base de donn√©es s√©lectionn√©e : Oracle";; \
		*) echo "‚ùå Erreur : S√©lection invalide."; exit 1;; \
	esac

# √âtape 4 (sp√©cifique √† MySQL) : S√©lection de la base de donn√©es MySQL dans une liste
select-mysql-db:
	@if [ -f "$(DB_TYPE_PATH)" ] && [ "$$(cat $(DB_TYPE_PATH))" = "mysql" ]; then \
		echo "üìã Liste des bases MySQL disponibles dans le container s√©lectionn√©:"; \
		CONTAINER_NAME=$$(cat $(CONTAINER_NAME_PATH)); \
		DATABASES=$$(docker exec -i $$CONTAINER_NAME sh -c 'exec mysql -uroot -p$$MYSQL_ROOT_PASSWORD -e "SHOW DATABASES;"' | tail -n +2 | grep -Ev "^(information_schema|performance_schema|mysql|sys)"); \
		if [ -z "$$DATABASES" ]; then \
			echo "‚ùå Aucune base de donn√©es disponible."; exit 1; \
		fi; \
		echo "$$DATABASES" | nl; \
		read -p "S√©lectionnez une base MySQL (num√©ro) : " choice; \
		MYSQL_DB=$$(echo "$$DATABASES" | sed -n "$$choice p"); \
		if [ -z "$$MYSQL_DB" ]; then \
			echo "‚ùå Erreur : S√©lection invalide."; exit 1; \
		fi; \
		echo "$$MYSQL_DB" > $(MYSQL_DB_PATH); \
		echo "‚úÖ Base MySQL s√©lectionn√©e : $$MYSQL_DB"; \
	else \
		echo "‚ùå Erreur : Le fichier $(DB_TYPE_PATH) n'existe pas ou n'est pas MySQL"; \
		exit 1; \
	fi

# √âtape 5: Ex√©cution de l'importation du dump
import-dump: select-db select-dump select-container select-mysql-db
	@if [ ! -f "$(MYSQL_DB_PATH)" ]; then \
		echo "‚ùå Erreur : Aucune base de donn√©es MySQL s√©lectionn√©e."; exit 1; \
	fi
	@MYSQL_DB=$$(cat $(MYSQL_DB_PATH)); \
	CONTAINER_NAME=$$(cat $(CONTAINER_NAME_PATH)); \
	DUMP_FILE=$$(cat $(DUMP_FILE_PATH)); \
	if [ ! -f "$$DUMP_FILE" ]; then \
		echo "‚ùå Erreur : Le fichier dump n'existe pas."; exit 1; \
	fi; \
	echo "üì• Importation dans la base $$MYSQL_DB..."; \
	echo "‚è≥ D√©but de l'importation..."; \
	if command -v pv >/dev/null 2>&1; then \
	    echo "üöÄ Utilisation de 'pv' pour afficher la progression..."; \
	    pv "$$DUMP_FILE" | docker exec -i $$CONTAINER_NAME sh -c "exec mysql -uroot -p$$MYSQL_ROOT_PASSWORD $$MYSQL_DB"; \
	else \
	    echo "‚ö†Ô∏è 'pv' non install√©, affichage du statut toutes les 5 secondes..."; \
	    ( \
	        i=0; \
	        while kill -0 $$! 2>/dev/null; do \
	            i=$$((i+5)); \
	            echo "‚è≥ Importation en cours ($$i sec)..."; \
	            sleep 5; \
	        done \
	    ) & \
	    cat "$$DUMP_FILE" | docker exec -i $$CONTAINER_NAME sh -c "exec mysql -uroot -p$$MYSQL_ROOT_PASSWORD $$MYSQL_DB"; \
	fi
	@echo "‚úÖ Importation termin√©e."
